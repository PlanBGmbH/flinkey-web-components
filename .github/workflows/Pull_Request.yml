name: Run PR Checks

on: 
  pull_request:

defaults:
  run:
    working-directory: ./components

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          npm i
      - name: Check code style (Prettier)
        run: |
          npm run format:check
      - name: Run Unit Tests
        run: |
          npm run test:unit
      - name: Run E2E Tests
        run: |
          npm run test:e2e
      - name: Build components
        run: |
          npm run build
      - name: Checkout main
        uses: actions/checkout@v2.3.4
        with:
          ref: 'main'
      - name: Read main package version
        run: |
          mainPackageVersion=$( jq -r '.version' package.json )
          echo "mainPackageVersion=$mainPackageVersion" >> $GITHUB_ENV
          echo "Current main version: $mainPackageVersion"
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Check for package version update
        run: |
          directoryDiff = $( git diff --quiet origin/main HEAD -- components );
          if [ $directoryDiff = 1 ];
          then
            echo 'components directory content changed'
            pullRequestPackageVersion=$( jq -r '.version' package.json )
            echo "PR package version: $pullRequestPackageVersion"
            echo "Latest package version on main: ${{ env.mainPackageVersion }}"
            if $(dpkg --compare-versions $pullRequestPackageVersion gt ${{ env.mainPackageVersion }});
            then
              echo 'Version updated'
            else
              echo 'Version did not update'
            fi
          else
            echo 'components directory content did not change'
          fi